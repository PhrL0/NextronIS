/* tslint:disable */
/* eslint-disable */
/**
 * Nextron API
 * API for managing machines, users, and AI models in Nextron
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LocateGet200ResponseLocationsInner } from './LocateGet200ResponseLocationsInner';
import {
    LocateGet200ResponseLocationsInnerFromJSON,
    LocateGet200ResponseLocationsInnerFromJSONTyped,
    LocateGet200ResponseLocationsInnerToJSON,
    LocateGet200ResponseLocationsInnerToJSONTyped,
} from './LocateGet200ResponseLocationsInner';

/**
 * 
 * @export
 * @interface LocateGet200Response
 */
export interface LocateGet200Response {
    /**
     * 
     * @type {Array<LocateGet200ResponseLocationsInner>}
     * @memberof LocateGet200Response
     */
    locations: Array<LocateGet200ResponseLocationsInner>;
    /**
     * 
     * @type {number}
     * @memberof LocateGet200Response
     */
    total: number;
    /**
     * 
     * @type {number}
     * @memberof LocateGet200Response
     */
    page: number;
    /**
     * 
     * @type {number}
     * @memberof LocateGet200Response
     */
    limit: number;
}

/**
 * Check if a given object implements the LocateGet200Response interface.
 */
export function instanceOfLocateGet200Response(value: object): value is LocateGet200Response {
    if (!('locations' in value) || value['locations'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    if (!('page' in value) || value['page'] === undefined) return false;
    if (!('limit' in value) || value['limit'] === undefined) return false;
    return true;
}

export function LocateGet200ResponseFromJSON(json: any): LocateGet200Response {
    return LocateGet200ResponseFromJSONTyped(json, false);
}

export function LocateGet200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LocateGet200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'locations': ((json['locations'] as Array<any>).map(LocateGet200ResponseLocationsInnerFromJSON)),
        'total': json['total'],
        'page': json['page'],
        'limit': json['limit'],
    };
}

export function LocateGet200ResponseToJSON(json: any): LocateGet200Response {
    return LocateGet200ResponseToJSONTyped(json, false);
}

export function LocateGet200ResponseToJSONTyped(value?: LocateGet200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'locations': ((value['locations'] as Array<any>).map(LocateGet200ResponseLocationsInnerToJSON)),
        'total': value['total'],
        'page': value['page'],
        'limit': value['limit'],
    };
}

